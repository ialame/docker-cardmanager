# üé® Dockerfile Painter - Version Bitbucket SSH Corrig√©e
FROM maven:3.9.6-eclipse-temurin-21 AS builder
WORKDIR /usr/src/app

# CRITIQUE : Installer openssh-client pour SSH
RUN apt-get update && \
    apt-get install -y git openssh-client curl && \
    rm -rf /var/lib/apt/lists/* && \
    echo "‚úÖ SSH client install√©"

# Arguments pour les d√©p√¥ts Bitbucket
ARG MASON_REPO_URL=git@bitbucket.org:pcafxc/mason.git
ARG PAINTER_REPO_URL=git@bitbucket.org:pcafxc/painter.git
ARG MASON_BRANCH=feature/RETRIEVER-511
ARG PAINTER_BRANCH=feature/card-manager-511
ARG GIT_TOKEN
ARG SSH_PRIVATE_KEY

# Configuration SSH pour Bitbucket
RUN mkdir -p ~/.ssh && \
    chmod 700 ~/.ssh && \
    echo "‚úÖ Dossier SSH cr√©√©"

# Ajouter les fingerprints SSH
RUN ssh-keyscan -H bitbucket.org >> ~/.ssh/known_hosts && \
    echo "‚úÖ Fingerprint Bitbucket ajout√©"

# Configurer la cl√© SSH si fournie
RUN if [ ! -z "$SSH_PRIVATE_KEY" ]; then \
        echo "$SSH_PRIVATE_KEY" | base64 -d > ~/.ssh/id_rsa && \
        chmod 600 ~/.ssh/id_rsa && \
        echo "‚úÖ Cl√© SSH configur√©e"; \
    else \
        echo "‚ö†Ô∏è Aucune cl√© SSH fournie"; \
    fi

# Configuration Git
RUN git config --global user.email "docker@cardmanager.local" && \
    git config --global user.name "Docker Builder" && \
    git config --global init.defaultBranch main && \
    echo "‚úÖ Git configur√©"

# Cr√©er un POM parent complet
RUN echo '<?xml version="1.0" encoding="UTF-8"?>' > pom.xml && \
    echo '<project xmlns="http://maven.apache.org/POM/4.0.0"' >> pom.xml && \
    echo '         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"' >> pom.xml && \
    echo '         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">' >> pom.xml && \
    echo '    <modelVersion>4.0.0</modelVersion>' >> pom.xml && \
    echo '    <parent>' >> pom.xml && \
    echo '        <groupId>org.springframework.boot</groupId>' >> pom.xml && \
    echo '        <artifactId>spring-boot-starter-parent</artifactId>' >> pom.xml && \
    echo '        <version>3.2.5</version>' >> pom.xml && \
    echo '        <relativePath/>' >> pom.xml && \
    echo '    </parent>' >> pom.xml && \
    echo '    <groupId>com.pcagrade</groupId>' >> pom.xml && \
    echo '    <artifactId>cardmanager</artifactId>' >> pom.xml && \
    echo '    <version>1.0.0-SNAPSHOT</version>' >> pom.xml && \
    echo '    <packaging>pom</packaging>' >> pom.xml && \
    echo '    <properties>' >> pom.xml && \
    echo '        <java.version>21</java.version>' >> pom.xml && \
    echo '        <maven.compiler.source>21</maven.compiler.source>' >> pom.xml && \
    echo '        <maven.compiler.target>21</maven.compiler.target>' >> pom.xml && \
    echo '        <mason.version>2.4.1</mason.version>' >> pom.xml && \
    echo '    </properties>' >> pom.xml && \
    echo '</project>' >> pom.xml

# Installer le POM parent
RUN mvn install -N && echo "‚úÖ POM parent install√©"

# Script de clone SSH intelligent et robuste
RUN echo '#!/bin/bash' > /usr/local/bin/git-clone-enhanced.sh && \
    echo 'set -e' >> /usr/local/bin/git-clone-enhanced.sh && \
    echo 'REPO_URL="$1"' >> /usr/local/bin/git-clone-enhanced.sh && \
    echo 'TARGET_DIR="$2"' >> /usr/local/bin/git-clone-enhanced.sh && \
    echo 'BRANCH="${3:-main}"' >> /usr/local/bin/git-clone-enhanced.sh && \
    echo 'TOKEN="$4"' >> /usr/local/bin/git-clone-enhanced.sh && \
    echo '' >> /usr/local/bin/git-clone-enhanced.sh && \
    echo 'echo "üîç Clonage de $REPO_URL (branche: $BRANCH)..."' >> /usr/local/bin/git-clone-enhanced.sh && \
    echo '' >> /usr/local/bin/git-clone-enhanced.sh && \
    echo '# Test de connexion SSH' >> /usr/local/bin/git-clone-enhanced.sh && \
    echo 'if echo "$REPO_URL" | grep -q "git@"; then' >> /usr/local/bin/git-clone-enhanced.sh && \
    echo '    echo "üì° Test SSH..."' >> /usr/local/bin/git-clone-enhanced.sh && \
    echo '    ssh -T git@bitbucket.org -o ConnectTimeout=10 -o BatchMode=yes || echo "‚ö†Ô∏è SSH test warning"' >> /usr/local/bin/git-clone-enhanced.sh && \
    echo 'fi' >> /usr/local/bin/git-clone-enhanced.sh && \
    echo '' >> /usr/local/bin/git-clone-enhanced.sh && \
    echo '# Clone avec retry' >> /usr/local/bin/git-clone-enhanced.sh && \
    echo 'for i in {1..3}; do' >> /usr/local/bin/git-clone-enhanced.sh && \
    echo '    if git clone --depth 1 --branch "$BRANCH" "$REPO_URL" "$TARGET_DIR"; then' >> /usr/local/bin/git-clone-enhanced.sh && \
    echo '        echo "‚úÖ Clone r√©ussi pour $TARGET_DIR"' >> /usr/local/bin/git-clone-enhanced.sh && \
    echo '        exit 0' >> /usr/local/bin/git-clone-enhanced.sh && \
    echo '    else' >> /usr/local/bin/git-clone-enhanced.sh && \
    echo '        echo "‚ùå Tentative $i √©chou√©e, retry..."' >> /usr/local/bin/git-clone-enhanced.sh && \
    echo '        sleep 2' >> /usr/local/bin/git-clone-enhanced.sh && \
    echo '    fi' >> /usr/local/bin/git-clone-enhanced.sh && \
    echo 'done' >> /usr/local/bin/git-clone-enhanced.sh && \
    echo 'echo "‚ùå Clone √©chou√© apr√®s 3 tentatives"' >> /usr/local/bin/git-clone-enhanced.sh && \
    echo 'exit 1' >> /usr/local/bin/git-clone-enhanced.sh && \
    chmod +x /usr/local/bin/git-clone-enhanced.sh

# Cloner Mason et Painter depuis Bitbucket
RUN /usr/local/bin/git-clone-enhanced.sh "$MASON_REPO_URL" mason "$MASON_BRANCH" "$GIT_TOKEN"
RUN /usr/local/bin/git-clone-enhanced.sh "$PAINTER_REPO_URL" painter "$PAINTER_BRANCH" "$GIT_TOKEN"

# Construire Mason
WORKDIR /usr/src/app/mason
RUN echo "üî® Construction de Mason..." && \
    mvn clean install -DskipTests -q && \
    echo "‚úÖ Mason construit avec succ√®s"

# Construire Painter
WORKDIR /usr/src/app/painter
RUN echo "üé® Construction de Painter..." && \
    mvn clean package -DskipTests -q && \
    echo "‚úÖ Painter construit avec succ√®s"

# Diagnostic des JARs cr√©√©s
RUN echo "üì¶ JARs trouv√©s:" && \
    find /usr/src/app -name "*.jar" -type f | grep -E "(painter|target)" | head -10

# ==========================================
# Stage de production
# ==========================================
FROM eclipse-temurin:21-jre-alpine
LABEL maintainer="ibrahim.alame@gmail.com"
WORKDIR /app

# Installer curl pour les health checks
RUN apk add --no-cache curl && \
    echo "‚úÖ Runtime configur√©"

# Copier le JAR Painter (chemin corrig√©)
COPY --from=builder /usr/src/app/painter/painter/target/painter-*.jar ./app.jar

# Cr√©er le dossier images
RUN mkdir -p /app/images && \
    chmod 755 /app/images && \
    echo "‚úÖ Dossier images cr√©√©"

# Port d'exposition
EXPOSE 8081

# Variables d'environnement
ENV SPRING_PROFILES_ACTIVE=docker

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8081/actuator/health || exit 1

# Point d'entr√©e
ENTRYPOINT ["java", "-jar", "app.jar"]
