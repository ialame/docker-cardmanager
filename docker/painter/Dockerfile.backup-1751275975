# üé® Dockerfile pour le service Painter
FROM maven:3.9.6-openjdk-21-slim AS builder

# Variables d'environnement
ARG MASON_REPO_URL
ARG PAINTER_REPO_URL
ARG MASON_BRANCH=feature/RETRIEVER-511
ARG PAINTER_BRANCH=feature/card-manager-511
ARG GIT_TOKEN
ARG SSH_PRIVATE_KEY

# Installation des outils n√©cessaires
RUN apt-get update && apt-get install -y \
    git \
    openssh-client \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Configuration Git
RUN git config --global user.name "Docker Builder" && \
    git config --global user.email "builder@docker.com"

# Configuration SSH si cl√© fournie
RUN if [ -n "${SSH_PRIVATE_KEY}" ]; then \
        mkdir -p /root/.ssh && \
        echo "${SSH_PRIVATE_KEY}" > /root/.ssh/id_rsa && \
        chmod 600 /root/.ssh/id_rsa && \
        ssh-keyscan github.com >> /root/.ssh/known_hosts; \
    fi

# R√©pertoire de travail
WORKDIR /usr/src/app

# Clonage des repositories
RUN echo "üîÑ Clonage de Mason..." && \
    if [ -n "${GIT_TOKEN}" ]; then \
        MASON_URL_WITH_TOKEN=$(echo ${MASON_REPO_URL} | sed "s|https://|https://${GIT_TOKEN}@|"); \
        git clone --depth 1 -b ${MASON_BRANCH} ${MASON_URL_WITH_TOKEN} mason; \
    else \
        git clone --depth 1 -b ${MASON_BRANCH} ${MASON_REPO_URL} mason; \
    fi

RUN echo "üé® Clonage de Painter..." && \
    if [ -n "${GIT_TOKEN}" ]; then \
        PAINTER_URL_WITH_TOKEN=$(echo ${PAINTER_REPO_URL} | sed "s|https://|https://${GIT_TOKEN}@|"); \
        git clone --depth 1 -b ${PAINTER_BRANCH} ${PAINTER_URL_WITH_TOKEN} painter; \
    else \
        git clone --depth 1 -b ${PAINTER_BRANCH} ${PAINTER_REPO_URL} painter; \
    fi

# Build Mason en premier
RUN echo "üî® Build de Mason..." && \
    cd mason && \
    mvn clean install -DskipTests -q

# Build Painter
RUN echo "üé® Build de Painter..." && \
    cd painter && \
    mvn clean package -DskipTests -q

# V√©rification des JARs construits
RUN echo "üîç V√©rification des JARs construits:" && \
    find /usr/src/app -name "*.jar" -type f | grep -v ".m2" | head -10

# Image finale
FROM openjdk:21-jre-slim

# M√©tadonn√©es
LABEL maintainer="ibrahim.alame@gmail.com"
LABEL description="Service Painter pour CardManager"

# Variables d'environnement
ENV SPRING_PROFILES_ACTIVE=docker
ENV SPRING_CONFIG_LOCATION=classpath:/application.properties,classpath:/application-docker.properties

# Cr√©ation du r√©pertoire applicatif
RUN mkdir -p /app/images
WORKDIR /app

# Installation des outils pour health check
RUN apt-get update && apt-get install -y \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Copie du JAR - Utilisation de plusieurs tentatives avec RUN
RUN echo "üîç Recherche du JAR Painter..."

# Tentative 1 : structure standard painter/target/
COPY --from=builder /usr/src/app/painter/target/painter-*.jar app.jar

# Tentative 2 : structure avec sous-dossier painter/painter/target/
RUN if [ ! -f app.jar ]; then \
        echo "üîç Tentative 2: sous-dossier painter/painter/target/"; \
    fi
COPY --from=builder /usr/src/app/painter/painter/target/painter-*.jar app.jar

# Tentative 3 : recherche dans tous les sous-dossiers
RUN if [ ! -f app.jar ]; then \
        echo "üîç Tentative 3: recherche dans tous les sous-dossiers"; \
        find /usr/src/app/painter -name "painter-*.jar" -type f | head -1 | xargs -I {} cp {} app.jar 2>/dev/null || echo "Tentative 3 √©chou√©e"; \
    fi

# V√©rification finale
RUN if [ ! -f app.jar ]; then \
        echo "‚ùå ERREUR: Aucun JAR Painter trouv√© !"; \
        echo "üìã Structure trouv√©e:"; \
        find /usr/src/app/painter -name "*.jar" -type f 2>/dev/null || echo "Aucun JAR trouv√©"; \
        exit 1; \
    else \
        echo "‚úÖ JAR Painter trouv√©: $(ls -la app.jar)"; \
    fi

# Configuration des volumes
VOLUME ["/app/images"]

# Port d'exposition
EXPOSE 8081

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:8081/actuator/health || exit 1

# Commande de d√©marrage
ENTRYPOINT ["java", "-Xmx512m", "-Dspring.profiles.active=${SPRING_PROFILES_ACTIVE}", "-jar", "/app/app.jar"]
