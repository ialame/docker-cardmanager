#!/bin/bash

echo "üîç Diagnostic du Build Painter"
echo "=============================="

# 1. V√©rifier la configuration Git
echo "üîß Configuration Git actuelle:"
echo "MASON_REPO_URL: ${MASON_REPO_URL:-'Non d√©fini'}"
echo "PAINTER_REPO_URL: ${PAINTER_REPO_URL:-'Non d√©fini'}"
echo "GIT_TOKEN: ${GIT_TOKEN:+***d√©fini***}"

# 2. Test de connectivit√© aux repos
echo ""
echo "üåê Test de connectivit√© aux repositories:"

if [ -n "${MASON_REPO_URL}" ]; then
    echo "üìã Test Mason repository..."
    if git ls-remote --heads "${MASON_REPO_URL}" &>/dev/null; then
        echo "‚úÖ Mason repository accessible"
    else
        echo "‚ùå Mason repository inaccessible"
        if [ -n "${GIT_TOKEN}" ]; then
            MASON_URL_WITH_TOKEN=$(echo ${MASON_REPO_URL} | sed "s|https://|https://${GIT_TOKEN}@|")
            if git ls-remote --heads "${MASON_URL_WITH_TOKEN}" &>/dev/null; then
                echo "‚úÖ Mason repository accessible avec token"
            else
                echo "‚ùå Mason repository inaccessible m√™me avec token"
            fi
        fi
    fi
fi

if [ -n "${PAINTER_REPO_URL}" ]; then
    echo "üìã Test Painter repository..."
    if git ls-remote --heads "${PAINTER_REPO_URL}" &>/dev/null; then
        echo "‚úÖ Painter repository accessible"
    else
        echo "‚ùå Painter repository inaccessible"
        if [ -n "${GIT_TOKEN}" ]; then
            PAINTER_URL_WITH_TOKEN=$(echo ${PAINTER_REPO_URL} | sed "s|https://|https://${GIT_TOKEN}@|")
            if git ls-remote --heads "${PAINTER_URL_WITH_TOKEN}" &>/dev/null; then
                echo "‚úÖ Painter repository accessible avec token"
            else
                echo "‚ùå Painter repository inaccessible m√™me avec token"
            fi
        fi
    fi
fi

# 3. V√©rifier les logs de build pr√©c√©dents
echo ""
echo "üìã Analyse des logs de build pr√©c√©dents:"
if docker-compose logs painter 2>/dev/null | grep -q "Building Painter"; then
    echo "‚úÖ Logs Painter trouv√©s"
    echo "Derni√®res lignes du build Painter:"
    docker-compose logs painter | grep -A 10 -B 5 "Building Painter" | tail -15
else
    echo "‚ö†Ô∏è Pas de logs Painter disponibles"
fi

# 4. Test de build simple
echo ""
echo "üß™ Test de build simple de Painter:"
echo "Tentative de clonage local pour diagnostic..."

# Cr√©er un r√©pertoire temporaire
temp_dir=$(mktemp -d)
cd "$temp_dir"

echo "üìÅ R√©pertoire temporaire: $temp_dir"

# Test du clonage
if [ -n "${PAINTER_REPO_URL}" ]; then
    echo "üîÑ Test de clonage Painter..."
    if [ -n "${GIT_TOKEN}" ]; then
        PAINTER_URL_WITH_TOKEN=$(echo ${PAINTER_REPO_URL} | sed "s|https://|https://${GIT_TOKEN}@|")
        if git clone --depth 1 "${PAINTER_URL_WITH_TOKEN}" painter-test; then
            echo "‚úÖ Clonage Painter r√©ussi avec token"

            echo "üìã Structure du repository Painter:"
            find painter-test -name "pom.xml" | head -5

            echo "üìã Fichiers dans painter-test:"
            ls -la painter-test/ | head -10

            # Chercher les dossiers avec des POMs
            echo "üìã Dossiers avec pom.xml:"
            find painter-test -name "pom.xml" -exec dirname {} \; | sort

        else
            echo "‚ùå Clonage Painter √©chou√© m√™me avec token"
        fi
    else
        if git clone --depth 1 "${PAINTER_REPO_URL}" painter-test; then
            echo "‚úÖ Clonage Painter r√©ussi sans token"

            echo "üìã Structure du repository:"
            ls -la painter-test/

        else
            echo "‚ùå Clonage Painter √©chou√©"
        fi
    fi
fi

# Nettoyage
cd - &>/dev/null
rm -rf "$temp_dir"

# 5. Recommandations
echo ""
echo "üí° RECOMMANDATIONS :"
echo "==================="

if ! command -v git &> /dev/null; then
    echo "‚ùå Git n'est pas install√©"
fi

if [ -z "${MASON_REPO_URL}" ] || [ -z "${PAINTER_REPO_URL}" ]; then
    echo "‚ö†Ô∏è Variables d'environnement manquantes"
    echo "   Cr√©ez/v√©rifiez votre fichier .env avec:"
    echo "   MASON_REPO_URL=https://github.com/ialame/mason"
    echo "   PAINTER_REPO_URL=https://github.com/ialame/painter"
    echo "   MASON_BRANCH=main"
    echo "   PAINTER_BRANCH=main"
fi

if [ -z "${GIT_TOKEN}" ]; then
    echo "üí° Si les repos sont priv√©s, ajoutez GIT_TOKEN dans .env"
fi

echo ""
echo "üéØ Actions suivantes recommand√©es:"
echo "1. Corriger le Dockerfile: ./fix_painter_dockerfile.sh"
echo "2. Relancer le build: docker-compose up --build painter"
echo "3. Surveiller les logs: docker-compose logs -f painter"

echo ""
echo "üîç Pour debug interactif du build:"
echo "   docker-compose build painter --progress=plain --no-cache"