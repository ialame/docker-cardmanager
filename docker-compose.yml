# SOLUTION 1: Volume Docker partagé (Recommandé)
# Modifiez docker-compose.yml

version: '3.8'

services:
  painter:
    build:
      context: .
      dockerfile: docker/painter/Dockerfile
    container_name: cardmanager-painter
    ports:
      - "8081:8081"
    volumes:
      - cardmanager_images:/app/images  # ← Volume pour persister les images
    environment:
      - JAVA_OPTS=-Xmx1024m -Xms512m
      - PAINTER_IMAGE_STORAGE_PATH=/app/images
    networks:
      - cardmanager-network

  gestioncarte:
    build:
      context: .
      dockerfile: docker/gestioncarte/Dockerfile
    container_name: cardmanager-gestioncarte
    ports:
      - "8080:8080"
    depends_on:
      painter:
        condition: service_started
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mariadb://mariadb-standalone:3306/dev
      - SPRING_DATASOURCE_USERNAME=ia
      - SPRING_DATASOURCE_PASSWORD=foufafou
      - SPRING_PROFILES_ACTIVE=docker
      - PAINTER_SERVICE_URL=http://painter:8081
      - PAINTER_BASE_URL=http://painter:8081
      - PAINTER_PUBLIC_URL=http://painter:8081
    networks:
      - cardmanager-network

  # Serveur web statique pour servir les images
  nginx-images:
    image: nginx:alpine
    container_name: cardmanager-images-server
    ports:
      - "8082:80"  # ← Port pour accéder aux images
    volumes:
      - cardmanager_images:/usr/share/nginx/html/images:ro  # ← Lecture seule
      - ./nginx-images.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - painter
    networks:
      - cardmanager-network

volumes:
  cardmanager_images:
    name: cardmanager_images

networks:
  cardmanager-network:
    name: cardmanager-network
    driver: bridge